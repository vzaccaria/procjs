#!/usr/bin/env coffee

punycode = require('punycode')
_s       = require('underscore.string')
group    = require('group-by') 
path     = require('path')
ss       = require('stringsim')
optimist = require('optimist')
moment   = require('moment')
_        = require('underscore')
fs       = require 'fs'


argv     = optimist.usage('eps.\nUsage: eps --option=V | -o V arg').argv

cli_arguments = argv._

mm = (x,y) ->
    e = ss.similar_text(y.toLowerCase(), x.toLowerCase())
    return e;

props = [ "USER", "UID", "CMD"]

meas = (x) ->
    
    measure_prop = (b, y, prop) ->
        if(y[prop]?) 
            mm(b,y[prop])
        else 
            0
            
    rd_command  = (acc,b) ->
        rpop = (ak, bk) -> ak + measure_prop(b, x, bk)
        dist = _.reduce(props, rpop, 0)
        acc = acc * dist
        
    v = _.reduce(cli_arguments, rd_command, 1)
    
    return v
    
fs.readFile '/dev/stdin', 'utf8', (err, data) ->
    if (err>1)
        console.log("error")
    else
        test = JSON.parse(data)
       
        test.sort (a,b) ->
            if meas(a) > meas(b)
                +1 
            else if meas(a) < meas(b)
                -1
            else 
                0
                
        for x in test
            s = ""
            for k,v of x
                s = s + " " + _s.rpad(v,10)
            console.log s



